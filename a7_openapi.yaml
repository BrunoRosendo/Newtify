openapi: 3.0.0

info:
 version: '1.0'
 title: 'LBAW Newtify API'
 description: 'Web Resources Specification (A7) for Newtify'

servers:
- url: http://lbaw.fe.up.pt
  description: Production server

externalDocs:
 description: Find more info here.
 url: https://git.fe.up.pt/lbaw/lbaw2122/lbaw2111/-/wikis/home

tags:
 - name: 'M01: Authentication'
 - name: 'M02: Profile and User Information'
 - name: 'M03: Articles'
 - name: 'M04: Comments'
 - name: 'M05: Tags'
 - name: 'M06: Messages and Notifications'
 - name: 'M07: User Administration'
 - name: 'M08: Static Pages'

paths:

  # M01: Authentication

  /login:
    post:
      operationId: R101
      summary: 'R101: Login action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - name
                - password

      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful login. Redirect to homepage.'
                  value: '/'
                302Failure:
                  description: 'Failed login. Redirect to login form.'
                  value: '/login'

  /logout:
    post:
      operationId: R102
      summary: 'R102: Logout action'
      description: 'Logout the current authenticated user. Access: USR'
      tags:
        - 'M01: Authentication'

      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to homepage.'
                  value: '/'

  /signup:
    get:
      operationId: 'R103'
      summary: 'R103: Sign-up Form'
      description: 'Provide form for new users. Access: PUB'
      tags:
       - 'M01: Authentication'

      responses:
        '200':
          description: 'Ok. Show sign-up form (UI03)'

    post:
      operationId: 'R104'
      summary: 'R104: Sign-up action'
      description: 'Processes the new user sign-up form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          # since we want to upload binary files (avatar)
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
                birthDate:
                  type: string
                  format: date
                avatar:
                  type: string
                  format: binary
                country:
                  type: string
              required:
                - name
                - email
                - birthDate
                - country
                - password

      responses:
        '302':
          description: 'Redirect after processing the new user sign-up form.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful registration. Redirect to user profile.'
                  value: '/users/{id}'
                302Failure:
                  description: 'Failed registration. Redirect to sign-up form.'

  # M02: Profile and User Information

  /user/{id}:
    get:
      operationId: R201
      summary: 'R201: View user profile'
      description: 'Show the individual user profile. Access: PUB'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show user profile (UI20)'

    put:
      operationId: R202
      summary: 'R202: Edit user profile action'
      description: 'Processes the user edit profile form submission. Access: OWN'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      requestBody:
        required: true
        content:
          # since we want to upload binary files (avatar)
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
                avatar:
                  type: string
                  format: binary
                country:
                  type: string
                description:
                  type: string
                city:
                  type: string

      responses:
        '302':
          description: 'Redirect after processing the user updated information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful profile edition. Redirect to user profile.'
                  value: '/user/{id}'
                302Failure:
                  description: 'Failed profile edition. Redirect to edit profile form.'
                  value: '/user/{id}/edit'

  # User deletion is hidden behind /api to prevent accidents
  /api/user/{id}:
    delete:
      operationId: R203
      summary: 'R203: Delete user account action'
      description: 'Processes a request to delete a user account. Access: OWN'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        '302':
          description: 'Redirect after deleting user account.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful user account deletion. Redirect to homepage.'
                  value: '/'
                302Failure:
                  description: 'Failed to delete user account. Redirect to user profile.'
                  value: '/user/{id}'

  /user/{id}/edit:
    get:
      operationId: R204
      summary: 'R204: User profile edition form'
      description: 'Provide form for user profile edition. Access: OWN'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show user profile edition form (UI21)'

  /user/{id}/report:
    post:
      operationId: R205
      summary: 'R205: Report user action'
      description: 'Processes a report made on a user. Access: USR'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reason:
                  type: string
                reporter_id:
                  type: integer
                reported_at:
                  type: string
                  format: date
              required:
                - reason
                - reporter_id

      responses:
        '200':
          description: 'Successful user report.'
        '400':
          description: 'Failed to report user. Bad request.'

  /user/{id}/suspension:
    get:
      operationId: R206
      summary: 'R205: Suspension information'
      description: 'Provides information about the user suspension'
      tags:
        - 'M02: Profile and User Information'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Success.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
                  end_date:
                    type: string
                    format: date
                example:
                  reason: 'The user was disrespectful in many occasions.'
                  end_date: '2023-12-04'


# obter tempo de suspensao
# ver melhor as respostas
