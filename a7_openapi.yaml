openapi: 3.0.0

info:
 version: '1.0'
 title: 'LBAW Newtify API'
 description: 'Web Resources Specification (A7) for Newtify'

servers:
- url: http://lbaw.fe.up.pt
  description: Production server

externalDocs:
 description: Find more info here.
 url: https://git.fe.up.pt/lbaw/lbaw2122/lbaw2111/-/wikis/home

tags:
 - name: 'M01: Authentication'
 - name: 'M02: Profile and User Information'
 - name: 'M03: Articles'
 - name: 'M04: Comments'
 - name: 'M05: Tags'
 - name: 'M06: Messages and Notifications'
 - name: 'M07: User Administration'
 - name: 'M08: Static Pages'

paths:

  # M01: Authentication

  /login:
    post:
      operationId: R101
      summary: 'R101: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - username
                - password

      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful login. Redirect to homepage.'
                  value: '/'
                302Error:
                  description: 'Failed login. Redirect to login form.'


  # M03 : Articles
  /home: 
    get:
      operationId: R301
      summary: 'R301: Get Home Page'
      description: 'R301: Fetch Home Page of the application that depends on the user. Access: PUB'
      tags:
        - 'M03: Articles'
      
      # requestBody = session cookie?
      responses:
        '200':
          description: 'OK. Show home page feed (UI01)'

  /search:
    get:
      operationId: R302
      summary: 'R302 : Search Page'
      description: 'Show Search Page given a search type and value. Access: PUB'
      tags:
        - 'M02: Profile and User Information'
        - 'M03: Articles'

      parameters:
        - in: query
          name: type
          description: 'Search type'
          schema: 
            type: string
            enum:
              - 'articles'
              - 'users'
          required: true
        - in: query
          name: query
          description: 'string used for full-text search'
          schema: 
            type: string
          required: false
      
      responses:
        '200':
          description: 'OK. Show Search Page (UI19)'

  /article/search:
    get:
      operationId: R303
      summary: 'R303 : Returns articles according to given parameters'
      description: 'Returns search results according to user parameters. Access: PUB'
      tags:
        - 'M03: Articles'

      parameters:
        - in: query
          name: query
          description: 'string used for full-text search'
          schema: 
            type: string
          required: false
        - in: query
          name: offset
          description: 'value used to fetch results starting at a certain value'
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
        - in: query
          name: limit
          description: 'value used to limit the number of results'
          schema:
            type: integer
            minimum: 1
          required: false  # returns all articles if not specified
      
      responses:
        '200':
          description: 'OK. Show a list of articles that fit the criteria'

  /article/filter:
    get:
      operationId: R304
      summary: 'R304 : Return articles according to certain filters'
      description: 'Show filtered articles by certain criteria. Access: PUB'
      tags:
        - 'M03: Articles'

      parameters:
        - in: query
          name: type
          description: 'feed type'
          schema: 
            type: string
            default: 'trending' # Check if this should be default
            enum:
              - 'trending'
              - 'recommended'
              - 'recent'
          required: false
        - in: query
          name: tag
          description: 'filter articles by tag'
          schema:
            type: string
          required: false
        - in: query
          name: offset
          description: 'value used to fetch results starting at a certain value'
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
        - in: query
          name: limit
          description: 'value used to limit the number of results'
          schema:
            type: integer
            minimum: 1
          required: false  # returns all articles if not specified
      
      responses:
        '200':
          description: 'OK. Show filter results'

  /article/{id}:
    get:
      operationId: R305
      summary: 'R305 : View Article Page'
      description: 'View an Article Page. Access: PUB'
      tags:
        - 'M03: Articles'

      parameters:
        - in: path
          name: id
          schema: 
            type: integer
          required: true
      
      responses:
        '200':
          description: 'OK. Show Article Page (UI13)'
        '404':
          description: 'Article not found'

    put:
      operationId: R306
      summary: 'R306 : Edit article action'
      description: 'Processes the user edit profile form submission. Access: OWN'
      tags:
        - 'M03: Articles'
      
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      requestBody:
        required: true
        content:
          # since we want to upload binary files (avatar)
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                thumbnail:
                  type: string
                  format: binary
                body:
                  type: string
      
      responses:
        '302':
          description: 'Redirect after processing the article updated information'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful article edition. Redirect to the article page.'
                  value: '/article/{id}'
                302Failure:
                  description: 'Failed article edition. Redirect to the edit article page.'
                  value: '/article/{id}/edit'
    
  /article/{id}/edit:
    get:
      operationId: R307
      summary: 'R307 : Article edition form'
      description: 'Provide a form for article edition. Access: OWN'
      tags:
        - 'M03: Articles'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      responses:
        '200':
          description: 'OK. Show article edition form (UI14)'
        '401':
          description: 'Unauthorized. Must be the owner of the article'
        '404':
          description: 'Article not found'
    
                


  


            


  

      

